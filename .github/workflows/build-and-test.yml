name: Build and Test
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  skip:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.filter.outputs.should_skip }}
    steps:
      - uses: actions/checkout@v4
        with:
          filter: blob:none
          fetch-depth: 0
      - uses: leavesster/pull-request-path-filter@v0.2
        id: "filter"
        with:
          paths: |
            - '**'
            - '!**.md'
            - '!.vscode/*'
            - '!.github/**'
            - '.github/workflows/build-and-test.yml'

  build:
    runs-on: ubuntu-latest
    needs: [skip]
    # Squash commits will add # at the end, filtering out squash commit pushes to reduce duplicate builds.
    if: ${{ needs.skip.outputs.should_skip != 'true' && !contains(github.event.head_commit.message, '#')}}
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          rustflags: ""
      - name: Start MQTT Broker
        run: |
          sudo apt update && sudo apt install -y --no-install-recommends mosquitto
          mosquitto -d -p 47688
      - name: Test
        timeout-minutes: 10
        run: cargo test --workspace --exclude layer
      - name: build oocana
        run: cargo build
      - name: upload oocana
        uses: actions/upload-artifact@v4
        with:
          name: oocana
          path: target/debug/oocana
  test-node:
    runs-on: ubuntu-latest
    needs: [skip, build]
    steps:
      - name: Download oocana
        uses: actions/download-artifact@v4
        with:
          name: oocana
          path: target/debug/oocana
      - uses: oomol/oocana-node/.github/actions/oocana-node@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: oocana-node
      - name: Start MQTT Broker
        run: |
          sudo apt update && sudo apt install -y --no-install-recommends mosquitto
          mosquitto -d -p 47688
      - name: replace oocana# cargo test will build the binary, so we only need to copy it
        run: cp target/debug/oocana oocana-node/packages/oocana/
      - name: test flow and other oocana api
        run: pnpm run test
        working-directory: oocana-node
      - name: upload node logs
        uses: actions/upload-artifact@v4
        with:
          name: oocana-node-logs
          path: |
            ~/.oocana/sessions/
          retention-days: 1
        if: failure()
  test-python:
    runs-on: ubuntu-latest
    needs: [skip, build]
    steps:
      - uses: oomol/oocana-python/.github/actions/oocana-python@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: oocana-python
      - name: Start MQTT Broker
        run: |
          sudo apt update && sudo apt install -y --no-install-recommends mosquitto
          mosquitto -d -p 47688
      - name: Download oocana
        uses: actions/download-artifact@v4
        with:
          name: oocana
          path: target/debug/oocana
      - name: install oocana-python
        run: |
          cd flow-examples
          npm install
        working-directory: oocana-python
      - name: replace oocana
        run: |
          cp target/debug/oocana flow-examples/node_modules/@oomol/oocana/
        working-directory: oocana-python
      - name: test flow and other oocana api
        run: |
          source .venv/bin/activate
          cd flow-examples
          npm run test
        working-directory: oocana-python
      - name: upload logs # only enable when debugging
        uses: actions/upload-artifact@v4
        with:
          name: oocana-python-logs
          path: |
            ~/.oocana/sessions/
          retention-days: 1
        if: failure()
  check:
    runs-on: ubuntu-latest
    needs: [skip, test-python, test-node]
    if: ${{ always() }}
    steps:
      - name: check
        run: |
          exit_on_result() {
            if [[ "$2" == "failure" || "$2" == "cancelled" ]]; then
              echo "Job '$1' failed or was cancelled."
              exit 1
            fi
          }

          exit_on_result "test-node" "${{ needs.test-node.result }}"
          exit_on_result "test-python" "${{ needs.test-python.result }}"
          echo all needs jobs : "${{ toJson(needs)}}"
