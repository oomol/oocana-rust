name: layer test

on:
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  OVMLAYER_LOG: /tmp/ovmlayer.log

jobs:
  skip:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.filter.outputs.should_skip }}
    steps:
      - uses: actions/checkout@v4
        with:
          filter: blob:none
          fetch-depth: 0
      - uses: leavesster/pull-request-path-filter@v0.2
        id: "filter"
        with:
          paths: |
            - "**"
            - "!.github/**"
            - ".github/workflows/layer.yml"
            - ".github/workflows/oocana-node.yml"
            - ".github/workflows/oocana-python.yml"
            - ".github/actions/ovmlayer/action.yml"
            - "!layer/**.md"

  rust-build:
    runs-on: ubuntu-latest
    needs: [skip]
    if: ${{ needs.skip.outputs.should_skip == 'false' }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          rustflags: ""
      - uses: ./.github/actions/ovmlayer
        with:
          token: ${{ secrets.ACCESS_REPO }}
      - name: test layer api
        run: cargo test --package layer -- --nocapture --test-threads=1 # 部分单测 API 互相干扰，需要一个个测试
      - name: build oocana
        run: cargo build
      - name: upload oocana
        uses: actions/upload-artifact@v4
        with:
          name: oocana
          path: target/debug/oocana

  test-node:
    needs: [skip, rust-build]
    uses: ./.github/workflows/oocana-node.yml
    with:
      create-layer: true
    secrets:
      layer-token: ${{ secrets.ACCESS_REPO }}
  test-python:
    needs: [skip, rust-build]
    uses: ./.github/workflows/oocana-python.yml
    with:
      create-layer: true
    secrets:
      layer-token: ${{ secrets.ACCESS_REPO }}
  build:
    runs-on: ubuntu-latest
    needs: [skip, test-python, test-node]
    if: ${{ always() }}
    steps:
      - name: check
        run: |
          exit_on_result() {
            if [[ "$2" == "failure" || "$2" == "cancelled" ]]; then
              echo "Job '$1' failed or was cancelled."
              exit 1
            fi
          }


          exit_on_result "skip" "${{ needs.skip.result }}"
          exit_on_result "test-node" "${{ needs.test-node.result }}"
          exit_on_result "test-python" "${{ needs.test-python.result }}"
          echo all needs jobs : "${{ toJson(needs)}}"
